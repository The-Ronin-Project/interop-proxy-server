name: Deployment to K8s

on:
  workflow_run:
    workflows: [Tests]
    types: [completed]
    branches: [master]

jobs:
  get-tags:
    name: Standard tags
    runs-on: ubuntu-18.04
    outputs:
      helm_tag: ${{ steps.git_info.outputs.helm_tag }}
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: Check out code
      uses: actions/checkout@v2.1.0

    - name: github information
      id: git_info
      run: |
        TAG=$(cat deployment/helm/interop-proxy-server/Chart.yaml | grep version | egrep -o '[0-9]+\.[0-9]+\.[0-9]+')
        echo ${TAG}
        echo ::set-output name=helm_tag::$(echo "${TAG}")

  image-push:
    runs-on: self-hosted
    env:
      repo: 'interop-proxy-server'
      server: 'ronincloud.azurecr.io'
      base-directory: ./
      image-tag: ${{ github.sha }}
      PACKAGE_USER: ${{ secrets.PACKAGES_PAT_USER }}
      PACKAGE_TOKEN: ${{ secrets.PACKAGES_PAT }}

    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: Check out code
      uses: actions/checkout@v2.1.0

    - name: ACR setup
      uses: azure/docker-login@v1
      with:
       login-server: ${{ env.server }}
       username: ${{ secrets.ACR_USERNAME }}
       password: ${{ secrets.ACR_PASSWORD }}

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: 'zulu'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: ${{ env.base-directory }}

    - name: Build
      run: |
        ./gradlew jibBuildTar
      working-directory: ${{ env.base-directory }}
    - name: Load, Tag, and Push
      run: |
        docker load --input build/jib-image.tar
        docker tag spring-boot-jib:latest ${{ env.server }}/${{ env.repo }}:${{ env.image-tag }}
        docker push ${{ env.server }}/${{ env.repo }}:${{ env.image-tag }}
      working-directory: ${{ env.base-directory }}
  helm:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    uses: projectronin/github/.github/workflows/helm_push.yml@master
    with:
      repo: 'interop-proxy-server'
    secrets:
      helm-repo: ${{ secrets.HELM_REPO }}
      helm-password: ${{ secrets.HELM_PASSWORD }}

  k8s:
    if: ${{ always() && contains(needs.helm.result, 'success') }}
    uses: projectronin/github/.github/workflows/k8s_deploy.yml@master
    needs: [get-tags,image-push,helm]
    with:
      environment: prod
      cluster-name: aks-prod-centralus
      resource-group: rg-infra-k8s-prod
      helm-tag: ${{ needs.get-tags.outputs.helm_tag }}
      image-tag: ${{ github.sha }}
      repo: 'interop-proxy-server'
    secrets:
      helm-repo: ${{ secrets.HELM_REPO }}
      helm-password: ${{ secrets.HELM_PASSWORD }}
      azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}
