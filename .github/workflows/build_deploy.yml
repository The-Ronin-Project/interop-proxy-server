name: Build and push to Nexus; Deploy to ArgoCD DEV

on:
  workflow_dispatch:
  workflow_run:
    workflows: [Tests]
    types: [completed]
    branches: [master]

jobs:
  image-push-latest:
    runs-on: self-hosted
    env:
      repo: "interop-proxy-server"
      server: "ronincloud.azurecr.io"
      base-directory: ./
      image-tag: "latest"
      PACKAGE_USER: ${{ secrets.PACKAGES_PAT_USER }}
      PACKAGE_TOKEN: ${{ secrets.PACKAGES_PAT }}

    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2.1.0

      - name: Wait for upstream workflows to be successful
        uses: ahmadnassri/action-workflow-run-wait@v1

      - name: ACR setup
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.server }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "zulu"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ${{ env.base-directory }}

      - name: Build
        run: |
          ./gradlew jibBuildTar
        working-directory: ${{ env.base-directory }}
      - name: Load, Tag, and Push
        run: |
          docker load --input build/jib-image.tar
          docker tag interop-proxy-server:latest ${{ env.server }}/${{ env.repo }}:${{ env.image-tag }}
          docker push ${{ env.server }}/${{ env.repo }}:${{ env.image-tag }}
        working-directory: ${{ env.base-directory }}

  image-push-sha:
    runs-on: self-hosted
    env:
      repo: "interop-proxy-server"
      server: "ronincloud.azurecr.io"
      base-directory: ./
      image-tag: ${{ github.sha }}
      PACKAGE_USER: ${{ secrets.PACKAGES_PAT_USER }}
      PACKAGE_TOKEN: ${{ secrets.PACKAGES_PAT }}

    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2.1.0

      - name: Wait for upstream workflows to be successful
        uses: ahmadnassri/action-workflow-run-wait@v1

      - name: ACR setup
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.server }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "zulu"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ${{ env.base-directory }}

      - name: Build
        run: |
          ./gradlew jibBuildTar
        working-directory: ${{ env.base-directory }}
      - name: Load, Tag, and Push
        run: |
          docker load --input build/jib-image.tar
          docker tag interop-proxy-server:latest ${{ env.server }}/${{ env.repo }}:${{ env.image-tag }}
          docker push ${{ env.server }}/${{ env.repo }}:${{ env.image-tag }}
        working-directory: ${{ env.base-directory }}

  argocd_dev:
    uses: projectronin/github/.github/workflows/argocd_deploy.yml@master
    needs: [image-push-sha]
    with:
      environment: dev
      image-tag: ${{ github.sha }}
    secrets:
      argocd-svc-automation: ${{ secrets.ARGOCD_SVC_AUTOMATION }}
