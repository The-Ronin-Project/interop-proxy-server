services:
  proxyserver:
    image: interop-proxy-server
    environment:
      - INTEROP_TENANT_CONFIG=file:/config/tenants.yaml
      - SPRING_QUEUE_DATASOURCE_JDBCURL=jdbc:mysql://queue:secret@db-queue:3306/interop-queue
      - SPRING_EHR_DATASOURCE_JDBCURL=jdbc:mysql://ehr:secret@db-ehr:3306/interop-ehr
      - RONIN_SERVER_AUTH_M2M_ISSUER=https://ronin-dev.auth0.com/
      - RONIN_SERVER_AUTH_M2M_AUDIENCE=proxy
      - AO_SANDBOX_KEY
      - SERVICE_CALL_JWT_SECRET
    volumes:
      - ./src/it/resources/:/config
    ports:
      - 8080:8080
    depends_on:
      - liquibase-queue
      - db-queue
      - liquibase-ehr
      - db-ehr
      - datadog-agent

  # Queue Database
  db-queue:
    image: mysql/mysql-server
    container_name: db-queue
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
      MYSQL_DATABASE: interop-queue
      MYSQL_USER: queue
      MYSQL_PASSWORD: secret
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "ehr", "-psecret" ]
      timeout: 5s
      retries: 10
  # Queue Migration
  liquibase-queue:
    container_name: liquibase-queue
    image: interop-queue-liquibase
    environment:
      - JDBC_URL=jdbc:mysql://queue:secret@db-queue:3306/interop-queue
    depends_on:
      db-queue:
        condition: service_healthy

  # EHR Database
  db-ehr:
    image: mysql/mysql-server
    container_name: db-ehr
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
      MYSQL_DATABASE: interop-ehr
      MYSQL_USER: ehr
      MYSQL_PASSWORD: secret
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "ehr", "-psecret" ]
      timeout: 5s
      retries: 10
  # EHR Migration
  liquibase-ehr:
    container_name: liquibase-ehr
    image: interop-ehr-liquibase
    environment:
      - JDBC_URL=jdbc:mysql://ehr:secret@db-ehr:3306/interop-ehr
      - DATA_LOAD=db/changelog/insertTestData.yaml
      - AO_SANDBOX_KEY
    volumes:
      - ./src/it/resources/db/changelog/:/liquibase/changelog/db/changelog
    depends_on:
      db-ehr:
        condition: service_healthy

  # Data Dog
  datadog-agent:
    image: gcr.io/datadoghq/agent:7
    environment:
      DD_ENV: local
      DD_APM_ENABLED: 'true'
      DD_DOGSTATSD_NON_LOCAL_TRAFFIC: 'true'
      DD_API_KEY: ${DD_API_KEY}
